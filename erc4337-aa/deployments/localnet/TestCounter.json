{
  "address": "0xD66942Fc65eA22fecD120EE800200493fD3f053F",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "CalledFrom",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "count",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "countFail",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "counters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repeat",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "gasWaster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "justemit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offset",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "xxx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd6193d2ac7b0eb200462b8f7dbfa3948a373adefd6fa75cab333d00ef8af46ba",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD",
    "contractAddress": null,
    "transactionIndex": 0,
    "gasUsed": "268462",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x218b1ed03dc8b36d6f96360568b8e7eba2000067576bf764e6c19df18da87152",
    "transactionHash": "0xd6193d2ac7b0eb200462b8f7dbfa3948a373adefd6fa75cab333d00ef8af46ba",
    "logs": [],
    "blockNumber": 16379,
    "cumulativeGasUsed": "268462",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f3c57b6d72582d9afbf634b43299faa5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"CalledFrom\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"countFail\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"counters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repeat\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"gasWaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"justemit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"xxx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestCounter.sol\":\"TestCounter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/test/TestCounter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.12;\\n\\n//sample \\\"receiver\\\" contract, for testing \\\"exec\\\" from account.\\ncontract TestCounter {\\n    mapping(address => uint256) public counters;\\n\\n    function count() public {\\n        counters[msg.sender] = counters[msg.sender] + 1;\\n    }\\n\\n    function getCount(address user) public view returns (uint256) {\\n        return counters[user];\\n    }\\n\\n    function countFail() public pure {\\n        revert(\\\"count failed\\\");\\n    }\\n\\n    function justemit() public {\\n        emit CalledFrom(msg.sender);\\n    }\\n\\n    event CalledFrom(address sender);\\n\\n    //helper method to waste gas\\n    // repeat - waste gas on writing storage in a loop\\n    // junk - dynamic buffer to stress the function size.\\n    mapping(uint256 => uint256) public xxx;\\n    uint256 public offset;\\n\\n    function gasWaster(uint256 repeat, string calldata /*junk*/) external {\\n        for (uint256 i = 1; i <= repeat; i++) {\\n            offset++;\\n            xxx[offset] = i;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x158db7539bd35a644fd0b96bd1c163da04ca7a5d1ac6e5b00ba70c67be9efba2\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506103e6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a5e9585f1161005b578063a5e9585f146100fa578063be65ab8c1461011a578063caece6931461013a578063d55565441461014257600080fd5b806306661abd1461008d578063278ddd3c146100975780634f0cd27b1461009f578063a1b46890146100e7575b600080fd5b61009561014b565b005b610095610178565b6100d56100ad36600461025e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60405190815260200160405180910390f35b6100956100f536600461029b565b6101ad565b6100d5610108366004610317565b60016020526000908152604090205481565b6100d561012836600461025e565b60006020819052908152604090205481565b6100956101f8565b6100d560025481565b3360009081526020819052604090205461016690600161035f565b33600090815260208190526040902055565b6040513381527ffb3b4d6258432a9a3d78dd9bffbcb6cfb1bd94f58da35fd530d08da7d1d058329060200160405180910390a1565b60015b8381116101f257600280549060006101c783610378565b90915550506002546000908152600160205260409020819055806101ea81610378565b9150506101b0565b50505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f636f756e74206661696c65640000000000000000000000000000000000000000604482015260640160405180910390fd5b60006020828403121561027057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461029457600080fd5b9392505050565b6000806000604084860312156102b057600080fd5b83359250602084013567ffffffffffffffff808211156102cf57600080fd5b818601915086601f8301126102e357600080fd5b8135818111156102f257600080fd5b87602082850101111561030457600080fd5b6020830194508093505050509250925092565b60006020828403121561032957600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561037257610372610330565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036103a9576103a9610330565b506001019056fea264697066735822122028011da0295f0aa821d8a798de9055d4f76bf24dfeae79ee3018f7b10c8ee91064736f6c63430008170033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063a5e9585f1161005b578063a5e9585f146100fa578063be65ab8c1461011a578063caece6931461013a578063d55565441461014257600080fd5b806306661abd1461008d578063278ddd3c146100975780634f0cd27b1461009f578063a1b46890146100e7575b600080fd5b61009561014b565b005b610095610178565b6100d56100ad36600461025e565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60405190815260200160405180910390f35b6100956100f536600461029b565b6101ad565b6100d5610108366004610317565b60016020526000908152604090205481565b6100d561012836600461025e565b60006020819052908152604090205481565b6100956101f8565b6100d560025481565b3360009081526020819052604090205461016690600161035f565b33600090815260208190526040902055565b6040513381527ffb3b4d6258432a9a3d78dd9bffbcb6cfb1bd94f58da35fd530d08da7d1d058329060200160405180910390a1565b60015b8381116101f257600280549060006101c783610378565b90915550506002546000908152600160205260409020819055806101ea81610378565b9150506101b0565b50505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f636f756e74206661696c65640000000000000000000000000000000000000000604482015260640160405180910390fd5b60006020828403121561027057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461029457600080fd5b9392505050565b6000806000604084860312156102b057600080fd5b83359250602084013567ffffffffffffffff808211156102cf57600080fd5b818601915086601f8301126102e357600080fd5b8135818111156102f257600080fd5b87602082850101111561030457600080fd5b6020830194508093505050509250925092565b60006020828403121561032957600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561037257610372610330565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036103a9576103a9610330565b506001019056fea264697066735822122028011da0295f0aa821d8a798de9055d4f76bf24dfeae79ee3018f7b10c8ee91064736f6c63430008170033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15953,
        "contract": "contracts/test/TestCounter.sol:TestCounter",
        "label": "counters",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 16006,
        "contract": "contracts/test/TestCounter.sol:TestCounter",
        "label": "xxx",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 16008,
        "contract": "contracts/test/TestCounter.sol:TestCounter",
        "label": "offset",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}