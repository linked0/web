🌟[정리]🏓🦋⚾️🥎🏐🐳🍀🌼🌸🏆🍜😈🐹🦁🌟🔹♦️⚡️💥🌈🔥⚾️🐶🦄☕️🚘🔴
dsinglethreaded=true dtest=agora.test.MultiRoundConsensus dub test




⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️



brew install go@1.21
  281* zzz
  282* git st
  283* ddd
  284* git diff exg/hello.go
  285* git co exg/hello.go
  286* git st
  287* code .gitignore
  288* git st
  289* git acp
  290  zzz
  291  zz
  292  go version
  293  make all
  294  cd poohnet
  295  ./init testnet 1
  296  ./enode-console
  297  ls
  298  ./enode-console
  299  cd ..
  300  ls
  301  ls build
  302  ls build/bin
  303  pwd
  304  zzz
  305  zz
  306  ./init testnet 1
  307  cd poohnet
  308  ./init testnet 1
  309  brew install docker
  310  ch "how to run docker on Mac"
  311  docker --version
  312  docker run hello-world
  313  docker --version
  314  ch "how to run it on Mac after installing it"
  315  ch "how to run docker deamon"
  316  ch "how to install docker desktop?\n"





FBFT is a variant of the BFT algorithm that has been implemented in payment-protocol-based blockchain platforms such as Ripple and Stellar. 

A quorum is the number of nodes required to reach agreement within a system. FBAs instead use ‘quorum slices’. A quorum slice is a subset of a quorum, which can convince another specific node to agree.



⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️
🍺  /opt/homebrew/Cellar/libsodium/1.0.20: 78 files, 888.8KB

🍺  /opt/homebrew/Cellar/pkg-config/0.29.2_3: 12 files, 678.8KB
🍺  /opt/homebrew/Cellar/openssl@3/3.3.2: 6,984 files, 32.5MB

"stringImportPaths" : [ "build" , "/opt/homebrew/Cellar/libsodium/1.0.20/include"],

"dflags": [ "-extern-std=c++17", "-preview=in", "-revert=dtorfields", "-I/opt/homebrew/Cellar/libsodium/1.0.20/include" ],
"lflags-posix": [ "-lstdc++", "-lsqlite3", "-L/opt/homebrew/Cellar/libsodium/1.0.20/lib" ],

If you need to have sqlite first in your PATH, run:
  echo 'export PATH="/opt/homebrew/opt/sqlite/bin:$PATH"' >> /Users/jaylee/.zshrc

For compilers to find sqlite you may need to set:
  export LDFLAGS="-L/opt/homebrew/opt/sqlite/lib"
  export CPPFLAGS="-I/opt/homebrew/opt/sqlite/include"


For compilers to find zlib you may need to set:
  export LDFLAGS="-L/opt/homebrew/opt/zlib/lib"
  export CPPFLAGS="-I/opt/homebrew/opt/zlib/include"

For pkg-config to find zlib you may need to set:
  export PKG_CONFIG_PATH="/opt/homebrew/opt/zlib/lib/pkgconfig"

---
Undefined symbols for architecture x86_64:
  "std::__1::vector<stellar::SCPQuorumSet, std::__1::allocator<stellar::SCPQuorumSet>>::reserve(unsigned long)", referenced from:
      __D4scpd3Cpp__T6vectorTSQv5types11Stellar_SCP12SCPQuorumSetTSQCgQCe__T9allocatorTQCgZQpZQCv10fromStringFNfAyaZSQEeQEc__TQEbTQDxTQCqZQEn in agora.o
  "std::__1::vector<stellar::Slot::HistoricalStatement, std::__1::allocator<stellar::Slot::HistoricalStatement>>::reserve(unsigned long)", referenced from:
      __D4scpd3Cpp__T6vectorTSQv3scp4SlotQf19HistoricalStatementTSQCfQCd__T9allocatorTQCfZQpZQCu10fromStringFNfAyaZSQEdQEb__TQEaTQDwTQCqZQEm in agora.o
  "std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>::reserve(unsigned long)", referenced from:
      __D4scpd3Cpp__T6vectorTE4core4stdc6config13__c_ulonglongTSQCdQCb__T9allocatorTQCdZQpZQCs10fromStringFNfAyaZSQEbQDz__TQDyTQDuTQCqZQEk in agora.o
ld: symbol(s) not found for architecture x86_64

---

yarn add /Users/hyunjaelee/work/pooh-land-js

/Users/hyunjaelee/work/metamask-extension

To use the bundled libc++ please add the following LDFLAGS:


  echo 'export PATH="/usr/local/opt/sqlite/bin:$PATH"' >> /Users/hyunjaelee/.zshrc

For compilers to find sqlite you may need to set:
  export LDFLAGS="-L/usr/local/opt/sqlite/lib"
  export CPPFLAGS="-I/usr/local/opt/sqlite/include"

For pkg-config to find sqlite you may need to set:
  export PKG_CONFIG_PATH="/usr/local/opt/sqlite/lib/pkgconfig"


  LDFLAGS="-L/usr/local/opt/llvm/lib/c++ -L/usr/local/opt/llvm/lib -lunwind"

llvm is keg-only, which means it was not symlinked into /usr/local,
because macOS already provides this software and installing another version in
parallel can cause all kinds of trouble.

If you need to have llvm first in your PATH, run:
  echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> /Users/hyunjaelee/.zshrc

For compilers to find llvm you may need to set:
  export LDFLAGS="-L/usr/local/opt/llvm/lib"
  export CPPFLAGS="-I/usr/local/opt/llvm/include"
==> Summary
🍺  /usr/local/Cellar/llvm/18.1.8: 7,722 files, 2.0GB
==> Running `brew cleanup llvm`...
Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.
Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).

ls /usr/local/opt/openssl@3.3/lib/pkgconfig/ 
  
{
    "_id": "66d9a4a9cdc60bbb1f142f24",
    "title": "New Disney 3",
    "content": "New High 3",
    "comments": [
        "66d9a70a86ef59d9622ff94d",
        "66d9a8a53ded8c0e0f640a3a"
    ],
    "__v": 0
}
ls /usr/local/Cellar/libsodium/1.0.20/include
source ~/dlang/ldc-1.28.1/activate

https://github.com/D-Programming-Deimos/openssl/commit/e44c6afc11a98e0c483934919e866ef2e6e7f66b

Jun 11 2018

lrwxr-xr-x    1 hyunjaelee  admin    25 Jul  5 14:16 openssl -> ../Cellar/openssl@3/3.3.1


        {
            "name": "unittest",
            "targetName": "agora-unittests",
            "excludedSourceFiles": [
                "source/agora/cli/*/main.d",
            ],
            "sourceFiles-posix": [
                "source/scpp/build/DSizeChecks.o",
                "source/scpp/build/DLayoutChecks.o"
            ],
            "sourceFiles-windows": [
                "source/scpp/build/DSizeChecks.obj",
                "source/scpp/build/DLayoutChecks.obj"
            ],
            "dflags": [ "-checkaction=context" ],
            "dflags-ldc": [ "--link-defaultlib-debug" ],
        },

