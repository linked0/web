🌟[정리]🏓🦋⚾️🥎🏐🐳🍀🌼🌸🏆🍜😈🐹🦁🌟🔹♦️⚡️💥🌈🔥⚾️🐶🦄☕️🚘🔴
dsinglethreaded=true dtest=agora.test.MultiRoundConsensus dub test

⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️

 
 "bosagoraBlock": 100,
    "bosagora": {
      "commonsBudget": "0x6A9866BEB9CE792F57ea116F457825fDcC1FC75D",
      "commonsBudgetReward": 120000000000000000000,
      "lastCommonsBudgetRewardBlock": 15000100
    }


a1=eth.accounts[1]
a2=eth.accounts[2]
a0=eth.accounts[0]
personal.unlockAccount(a0, 'boa2022!@')
personal.unlockAccount(a1,'boa2022!@')
personal.unlockAccount(a2,'boa2022!@')
miner.setEtherbase(a0)


a1=personal.importRawKey("7184281c677db98212c216cf11e47a4e9ec8f4b6932aa5d2d902b943ad501d23", "boa2022!@")
a2=personal.importRawKey("58984b2bf6f0f3de4f38290ed3c541ac27bac384b378073ab133af8b314a1887", "boa2022!@")
personal.unlockAccount(a0, 'boa2022!@')
personal.unlockAccount(a1,'boa2022!@')
personal.unlockAccount(a2,'boa2022!@')
miner.setEtherbase(a0)

eth.sendTransaction({from:a2, to:a1, value:web3.toWei(9, 'ether'), gasLimit:21000, gasPrice: 200000000000})

eth.sendTransaction({from:a0, to:a1, value:web3.toWei(9, 'ether'), gasLimit:21000, gasPrice: 200000000000})
eth.sendTransaction({from:a0, to:a1, value:web3.toWei(9, 'ether'), gasLimit:21000, gasPrice: 200000000000})

eth.pendingTransactions
miner.stop()
web3.fromWei(eth.getBalance(a0), 'ether')
web3.fromWei(eth.getBalance(a1),  'ether')
web3.fromWei(eth.getBalance(a2),  'ether')


brew install go@1.21
  281* zzz
  282* git st
  283* ddd
  284* git diff exg/hello.go
  285* git co exg/hello.go
  286* git st
  287* code .gitignore
  288* git st
  289* git acp
  290  zzz
  291  zz
  292  go version
  293  make all
  294  cd poohnet
  295  ./init testnet 1
  296  ./enode-console
  297  ls
  298  ./enode-console
  299  cd ..
  300  ls
  301  ls build
  302  ls build/bin
  303  pwd
  304  zzz
  305  zz
  306  ./init testnet 1
  307  cd poohnet
  308  ./init testnet 1
  309  brew install docker
  310  ch "how to run docker on Mac"
  311  docker --version
  312  docker run hello-world
  313  docker --version
  314  ch "how to run it on Mac after installing it"
  315  ch "how to run docker deamon"
  316  ch "how to install docker desktop?\n"


func (s *BlockChainAPI) Call(ctx context.Context, args TransactionArgs, blockNrOrHash rpc.BlockNumberOrHash, overrides *StateOverride, blockOverrides *BlockOverrides) (hexutil.Bytes, error) {
	result, err := DoCall(ctx, s.b, args, blockNrOrHash, overrides, blockOverrides, s.b.RPCEVMTimeout(), s.b.RPCGasCap())
	if err != nil {
		return nil, err
	}
	// If the result contains a revert reason, try to unpack and return it.
	if len(result.Revert()) > 0 {
		return nil, newRevertError(result)
	}
	return result.Return(), result.Err
}

⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️
> eth.sendTransaction({from:a2, to:a1, value:web3.toWei(9, 'ether'), gasLimit:21000, gasPrice: 200000000000})
WARN [09-12|15:43:05.728] JJJ api > doCall:                        msg="(*core.Message)(0xc001708210)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 4390523,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.728] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.728] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ api > doCall:                        msg="(*core.Message)(0xc0017082c0)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 2205761,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.729] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ api > doCall:                        msg="(*core.Message)(0xc001708370)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 1113380,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.729] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ api > doCall:                        msg="(*core.Message)(0xc001708420)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 567189,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.729] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ api > doCall:                        msg="(*core.Message)(0xc0017084d0)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 294094,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.729] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ api > doCall:                        msg="(*core.Message)(0xc001708580)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 157546,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.729] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ api > doCall:                        msg="(*core.Message)(0xc001708630)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 89272,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.729] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ api > doCall:                        msg="(*core.Message)(0xc0017086e0)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 55135,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.729] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ api > doCall:                        msg="(*core.Message)(0xc001708790)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 38067,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.729] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.729] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ api > doCall:                        msg="(*core.Message)(0xc001708840)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 29533,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.730] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ api > doCall:                        msg="(*core.Message)(0xc0017088f0)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 25266,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.730] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ api > doCall:                        msg="(*core.Message)(0xc0017089a0)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 23132,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.730] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ api > doCall:                        msg="(*core.Message)(0xc001708a50)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 22065,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.730] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ api > doCall:                        msg="(*core.Message)(0xc001708b00)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 21532,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.730] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ api > doCall:                        msg="(*core.Message)(0xc001708bb0)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 21265,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.730] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ api > doCall:                        msg="(*core.Message)(0xc001708c60)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 21132,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.730] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ api > doCall:                        msg="(*core.Message)(0xc001708d10)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 21065,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.730] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ api > doCall:                        msg="(*core.Message)(0xc001708dc0)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 21032,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.730] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.730] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.742] JJJ api > doCall:                        msg="(*core.Message)(0xc001708e70)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 21015,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.742] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.742] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.762] JJJ api > doCall:                        msg="(*core.Message)(0xc001708f20)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 21007,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.762] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.763] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.763] JJJ api > doCall:                        msg="(*core.Message)(0xc001708fd0)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 21003,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.763] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.763] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.763] JJJ api > doCall:                        msg="(*core.Message)(0xc001709080)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 21001,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.763] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.763] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.763] JJJ api > doCall:                        msg="(*core.Message)(0xc001709130)({\n To: (*common.Address)(0xc000349248)((len=20 cap=20) 0x8790d4A448873CE0F624E31aC732c06eB211a715),\n From: (common.Address) (len=20 cap=20) 0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD,\n Nonce: (uint64) 0,\n Value: (*big.Int)(0xc0023c8720)(9000000000000000000),\n GasLimit: (uint64) 21000,\n GasPrice: (*big.Int)(0xc0023c8700)(200000000000),\n GasFeeCap: (*big.Int)(0xc0023c8700)(200000000000),\n GasTipCap: (*big.Int)(0xc0023c8700)(200000000000),\n Data: ([]uint8) <nil>,\n AccessList: (types.AccessList) <nil>,\n BlobGasFeeCap: (*big.Int)(<nil>),\n BlobHashes: ([]common.Hash) <nil>,\n SkipAccountChecks: (bool) true\n})\n"
WARN [09-12|15:43:05.763] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.763] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
INFO [09-12|15:43:05.765] Submitted transaction                    hash=0x5486e28d5099b2c7d3e9185078804184d5d205bf98d0f908d53a25eb4d7c5add from=0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD nonce=21 recipient=0x8790d4A448873CE0F624E31aC732c06eB211a715 value=9,000,000,000,000,000,000
WARN [09-12|15:43:05.765] JJJ core > state_processor > applyTransaction:  msg="&{To:0x8790d4A448873CE0F624E31aC732c06eB211a715 From:0x1811DfdE14b2e9aBAF948079E8962d200E71aCFD Nonce:21 Value:+9000000000000000000 GasLimit:21000 GasPrice:+200000000000 GasFeeCap:+200000000000 GasTipCap:+200000000000 Data:[] AccessList:[] BlobGasFeeCap:<nil> BlobHashes:[] SkipAccountChecks:false}"
"0x5486e28d5099b2c7d3e9185078804184d5d205bf98d0f908d53a25eb4d7c5add"
WARN [09-12|15:43:05.765] JJJ ApplyMessage > msg: %+v              LOG15_ERROR=*core.Message is not a string key LOG15_ERROR="Normalized odd number of arguments by adding nil"
WARN [09-12|15:43:05.765] JJJ state_transition.go > TransitionDb > commonsCut 1260000=nil LOG15_ERROR="Normalized odd number of arguments by adding nil"
> 


⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️⚡️
🍺  /opt/homebrew/Cellar/libsodium/1.0.20: 78 files, 888.8KB

🍺  /opt/homebrew/Cellar/pkg-config/0.29.2_3: 12 files, 678.8KB
🍺  /opt/homebrew/Cellar/openssl@3/3.3.2: 6,984 files, 32.5MB

"stringImportPaths" : [ "build" , "/opt/homebrew/Cellar/libsodium/1.0.20/include"],

"dflags": [ "-extern-std=c++17", "-preview=in", "-revert=dtorfields", "-I/opt/homebrew/Cellar/libsodium/1.0.20/include" ],
"lflags-posix": [ "-lstdc++", "-lsqlite3", "-L/opt/homebrew/Cellar/libsodium/1.0.20/lib" ],

If you need to have sqlite first in your PATH, run:
  echo 'export PATH="/opt/homebrew/opt/sqlite/bin:$PATH"' >> /Users/jaylee/.zshrc

For compilers to find sqlite you may need to set:
  export LDFLAGS="-L/opt/homebrew/opt/sqlite/lib"
  export CPPFLAGS="-I/opt/homebrew/opt/sqlite/include"


For compilers to find zlib you may need to set:
  export LDFLAGS="-L/opt/homebrew/opt/zlib/lib"
  export CPPFLAGS="-I/opt/homebrew/opt/zlib/include"

For pkg-config to find zlib you may need to set:
  export PKG_CONFIG_PATH="/opt/homebrew/opt/zlib/lib/pkgconfig"

---
Undefined symbols for architecture x86_64:
  "std::__1::vector<stellar::SCPQuorumSet, std::__1::allocator<stellar::SCPQuorumSet>>::reserve(unsigned long)", referenced from:
      __D4scpd3Cpp__T6vectorTSQv5types11Stellar_SCP12SCPQuorumSetTSQCgQCe__T9allocatorTQCgZQpZQCv10fromStringFNfAyaZSQEeQEc__TQEbTQDxTQCqZQEn in agora.o
  "std::__1::vector<stellar::Slot::HistoricalStatement, std::__1::allocator<stellar::Slot::HistoricalStatement>>::reserve(unsigned long)", referenced from:
      __D4scpd3Cpp__T6vectorTSQv3scp4SlotQf19HistoricalStatementTSQCfQCd__T9allocatorTQCfZQpZQCu10fromStringFNfAyaZSQEdQEb__TQEaTQDwTQCqZQEm in agora.o
  "std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>::reserve(unsigned long)", referenced from:
      __D4scpd3Cpp__T6vectorTE4core4stdc6config13__c_ulonglongTSQCdQCb__T9allocatorTQCdZQpZQCs10fromStringFNfAyaZSQEbQDz__TQDyTQDuTQCqZQEk in agora.o
ld: symbol(s) not found for architecture x86_64

---

yarn add /Users/hyunjaelee/work/pooh-land-js

/Users/hyunjaelee/work/metamask-extension

To use the bundled libc++ please add the following LDFLAGS:


  echo 'export PATH="/usr/local/opt/sqlite/bin:$PATH"' >> /Users/hyunjaelee/.zshrc

For compilers to find sqlite you may need to set:
  export LDFLAGS="-L/usr/local/opt/sqlite/lib"
  export CPPFLAGS="-I/usr/local/opt/sqlite/include"

For pkg-config to find sqlite you may need to set:
  export PKG_CONFIG_PATH="/usr/local/opt/sqlite/lib/pkgconfig"


  LDFLAGS="-L/usr/local/opt/llvm/lib/c++ -L/usr/local/opt/llvm/lib -lunwind"

llvm is keg-only, which means it was not symlinked into /usr/local,
because macOS already provides this software and installing another version in
parallel can cause all kinds of trouble.

If you need to have llvm first in your PATH, run:
  echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> /Users/hyunjaelee/.zshrc

For compilers to find llvm you may need to set:
  export LDFLAGS="-L/usr/local/opt/llvm/lib"
  export CPPFLAGS="-I/usr/local/opt/llvm/include"
==> Summary
🍺  /usr/local/Cellar/llvm/18.1.8: 7,722 files, 2.0GB
==> Running `brew cleanup llvm`...
Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.
Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).

ls /usr/local/opt/openssl@3.3/lib/pkgconfig/ 
  
{
    "_id": "66d9a4a9cdc60bbb1f142f24",
    "title": "New Disney 3",
    "content": "New High 3",
    "comments": [
        "66d9a70a86ef59d9622ff94d",
        "66d9a8a53ded8c0e0f640a3a"
    ],
    "__v": 0
}
ls /usr/local/Cellar/libsodium/1.0.20/include
source ~/dlang/ldc-1.28.1/activate

https://github.com/D-Programming-Deimos/openssl/commit/e44c6afc11a98e0c483934919e866ef2e6e7f66b

Jun 11 2018

lrwxr-xr-x    1 hyunjaelee  admin    25 Jul  5 14:16 openssl -> ../Cellar/openssl@3/3.3.1


        {
            "name": "unittest",
            "targetName": "agora-unittests",
            "excludedSourceFiles": [
                "source/agora/cli/*/main.d",
            ],
            "sourceFiles-posix": [
                "source/scpp/build/DSizeChecks.o",
                "source/scpp/build/DLayoutChecks.o"
            ],
            "sourceFiles-windows": [
                "source/scpp/build/DSizeChecks.obj",
                "source/scpp/build/DLayoutChecks.obj"
            ],
            "dflags": [ "-checkaction=context" ],
            "dflags-ldc": [ "--link-defaultlib-debug" ],
        },

