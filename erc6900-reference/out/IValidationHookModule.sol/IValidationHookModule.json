{"abi":[{"type":"function","name":"moduleId","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"onInstall","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onUninstall","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"preRuntimeValidationHook","inputs":[{"name":"entityId","type":"uint32","internalType":"uint32"},{"name":"sender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"authorization","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"preSignatureValidationHook","inputs":[{"name":"entityId","type":"uint32","internalType":"uint32"},{"name":"sender","type":"address","internalType":"address"},{"name":"hash","type":"bytes32","internalType":"bytes32"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"preUserOpValidationHook","inputs":[{"name":"entityId","type":"uint32","internalType":"uint32"},{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"moduleId()":"a1308f27","onInstall(bytes)":"6d61fe70","onUninstall(bytes)":"8a91b0e3","preRuntimeValidationHook(uint32,address,uint256,bytes,bytes)":"3d6bda32","preSignatureValidationHook(uint32,address,bytes32,bytes)":"3f41826e","preUserOpValidationHook(uint32,(address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)":"2a3d428c","supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"moduleId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onInstall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onUninstall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"entityId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"authorization\",\"type\":\"bytes\"}],\"name\":\"preRuntimeValidationHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"entityId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"preSignatureValidationHook\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"entityId\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"}],\"name\":\"preUserOpValidationHook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"moduleId()\":{\"details\":\"This function MUST return a string in the format \\\"vendor.module.semver\\\". The vendor and module names MUST NOT contain a period character.\",\"returns\":{\"_0\":\"The module ID.\"}},\"onInstall(bytes)\":{\"details\":\"Called by the modular account during `installExecution`.\",\"params\":{\"data\":\"Optional bytes array to be decoded and used by the module to setup initial module data for the modular account.\"}},\"onUninstall(bytes)\":{\"details\":\"Called by the modular account during `uninstallExecution`.\",\"params\":{\"data\":\"Optional bytes array to be decoded and used by the module to clear module data for the modular account.\"}},\"preRuntimeValidationHook(uint32,address,uint256,bytes,bytes)\":{\"details\":\"To indicate the entire call should revert, the function MUST revert.\",\"params\":{\"authorization\":\"Additional data for the hook to use.\",\"data\":\"The calldata sent.\",\"entityId\":\"An identifier that routes the call to different internal implementations, should there be more than one.\",\"sender\":\"The caller address.\",\"value\":\"The call value.\"}},\"preSignatureValidationHook(uint32,address,bytes32,bytes)\":{\"details\":\"To indicate the call should revert, the function MUST revert.\",\"params\":{\"entityId\":\"An identifier that routes the call to different internal implementations, should there be more than one.\",\"hash\":\"The hash of the message being signed.\",\"sender\":\"The caller address.\",\"signature\":\"The signature of the message.\"}},\"preUserOpValidationHook(uint32,(address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)\":{\"details\":\"Pre user operation validation hooks MUST NOT return an authorizer value other than 0 or 1.\",\"params\":{\"entityId\":\"An identifier that routes the call to different internal implementations, should there be more than one.\",\"userOp\":\"The user operation.\",\"userOpHash\":\"The user operation hash.\"},\"returns\":{\"_0\":\"Packed validation data for validAfter (6 bytes), validUntil (6 bytes), and authorizer (20 bytes).\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"moduleId()\":{\"notice\":\"Return a unique identifier for the module.\"},\"onInstall(bytes)\":{\"notice\":\"Initialize module data for the modular account.\"},\"onUninstall(bytes)\":{\"notice\":\"Clear module data for the modular account.\"},\"preRuntimeValidationHook(uint32,address,uint256,bytes,bytes)\":{\"notice\":\"Run the pre runtime validation hook specified by the `entityId`.\"},\"preSignatureValidationHook(uint32,address,bytes32,bytes)\":{\"notice\":\"Run the pre signature validation hook specified by the `entityId`.\"},\"preUserOpValidationHook(uint32,(address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)\":{\"notice\":\"Run the pre user operation validation hook specified by the `entityId`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IValidationHookModule.sol\":\"IValidationHookModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eth-infinitism/account-abstraction/=lib/account-abstraction/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"src/interfaces/IModule.sol\":{\"keccak256\":\"0x73943d0881d979bc4f4a16a8b260cbfcf9f64d1b13f766c2670842d421bc1c0a\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://25b495711086dfc0e8135d40953a6b21c4d240456eb1fc2656f687afa9d493e2\",\"dweb:/ipfs/Qma2ireMK3FsCbK3rKd9DVBw8dxmRGMrgXzcjfjhRswwo2\"]},\"src/interfaces/IValidationHookModule.sol\":{\"keccak256\":\"0x5034a9740e9daca15522674d119125f2d5cb553900e266adbb6f8f86e6bc066a\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://77fb7846653c165a3c7fae142f772c8b45387e8b8337a97ac12a8da1799e1513\",\"dweb:/ipfs/QmSt1gPpSZyydqq54vZ5yHwnpRbggSkrMxgMHMhcNtuAqb\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"moduleId","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onInstall"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onUninstall"},{"inputs":[{"internalType":"uint32","name":"entityId","type":"uint32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"authorization","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"preRuntimeValidationHook"},{"inputs":[{"internalType":"uint32","name":"entityId","type":"uint32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"view","type":"function","name":"preSignatureValidationHook"},{"inputs":[{"internalType":"uint32","name":"entityId","type":"uint32"},{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"preUserOpValidationHook","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"moduleId()":{"details":"This function MUST return a string in the format \"vendor.module.semver\". The vendor and module names MUST NOT contain a period character.","returns":{"_0":"The module ID."}},"onInstall(bytes)":{"details":"Called by the modular account during `installExecution`.","params":{"data":"Optional bytes array to be decoded and used by the module to setup initial module data for the modular account."}},"onUninstall(bytes)":{"details":"Called by the modular account during `uninstallExecution`.","params":{"data":"Optional bytes array to be decoded and used by the module to clear module data for the modular account."}},"preRuntimeValidationHook(uint32,address,uint256,bytes,bytes)":{"details":"To indicate the entire call should revert, the function MUST revert.","params":{"authorization":"Additional data for the hook to use.","data":"The calldata sent.","entityId":"An identifier that routes the call to different internal implementations, should there be more than one.","sender":"The caller address.","value":"The call value."}},"preSignatureValidationHook(uint32,address,bytes32,bytes)":{"details":"To indicate the call should revert, the function MUST revert.","params":{"entityId":"An identifier that routes the call to different internal implementations, should there be more than one.","hash":"The hash of the message being signed.","sender":"The caller address.","signature":"The signature of the message."}},"preUserOpValidationHook(uint32,(address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)":{"details":"Pre user operation validation hooks MUST NOT return an authorizer value other than 0 or 1.","params":{"entityId":"An identifier that routes the call to different internal implementations, should there be more than one.","userOp":"The user operation.","userOpHash":"The user operation hash."},"returns":{"_0":"Packed validation data for validAfter (6 bytes), validUntil (6 bytes), and authorizer (20 bytes)."}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"userdoc":{"kind":"user","methods":{"moduleId()":{"notice":"Return a unique identifier for the module."},"onInstall(bytes)":{"notice":"Initialize module data for the modular account."},"onUninstall(bytes)":{"notice":"Clear module data for the modular account."},"preRuntimeValidationHook(uint32,address,uint256,bytes,bytes)":{"notice":"Run the pre runtime validation hook specified by the `entityId`."},"preSignatureValidationHook(uint32,address,bytes32,bytes)":{"notice":"Run the pre signature validation hook specified by the `entityId`."},"preUserOpValidationHook(uint32,(address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)":{"notice":"Run the pre user operation validation hook specified by the `entityId`."}},"version":1}},"settings":{"remappings":["@eth-infinitism/account-abstraction/=lib/account-abstraction/contracts/","@openzeppelin/=lib/openzeppelin-contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","solady/=lib/solady/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/interfaces/IValidationHookModule.sol":"IValidationHookModule"},"evmVersion":"paris","libraries":{}},"sources":{"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"},"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol":{"keccak256":"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724","urls":["bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a","dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8","urls":["bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621","dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"],"license":"MIT"},"src/interfaces/IModule.sol":{"keccak256":"0x73943d0881d979bc4f4a16a8b260cbfcf9f64d1b13f766c2670842d421bc1c0a","urls":["bzz-raw://25b495711086dfc0e8135d40953a6b21c4d240456eb1fc2656f687afa9d493e2","dweb:/ipfs/Qma2ireMK3FsCbK3rKd9DVBw8dxmRGMrgXzcjfjhRswwo2"],"license":"CC0-1.0"},"src/interfaces/IValidationHookModule.sol":{"keccak256":"0x5034a9740e9daca15522674d119125f2d5cb553900e266adbb6f8f86e6bc066a","urls":["bzz-raw://77fb7846653c165a3c7fae142f772c8b45387e8b8337a97ac12a8da1799e1513","dweb:/ipfs/QmSt1gPpSZyydqq54vZ5yHwnpRbggSkrMxgMHMhcNtuAqb"],"license":"CC0-1.0"}},"version":1},"id":111}