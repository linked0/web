{"abi":[{"type":"function","name":"increment","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"number","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setNumber","inputs":[{"name":"newNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b5060ce80601d6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80633fb5c1cb1460415780638381f58a146053578063d09de08a14606d575b600080fd5b6051604c3660046083565b600055565b005b605b60005481565b60405190815260200160405180910390f35b6051600080549080607c83609b565b9190505550565b600060208284031215609457600080fd5b5035919050565b60006001820160ba57634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c634300081a000a","sourceMap":"109:439:150:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052348015600f57600080fd5b5060043610603c5760003560e01c80633fb5c1cb1460415780638381f58a146053578063d09de08a14606d575b600080fd5b6051604c3660046083565b600055565b005b605b60005481565b60405190815260200160405180910390f35b6051600080549080607c83609b565b9190505550565b600060208284031215609457600080fd5b5035919050565b60006001820160ba57634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c634300081a000a","sourceMap":"109:439:150:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;274:80;;;;;;:::i;:::-;329:6;:18;274:80;;;132:21;;;;;;;;;345:25:176;;;333:2;318:18;132:21:150;;;;;;;493:53;;531:6;:8;;;:6;:8;;;:::i;:::-;;;;;;493:53::o;14:180:176:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:176;;14:180;-1:-1:-1;14:180:176:o;381:232::-;420:3;441:17;;;438:140;;500:10;495:3;491:20;488:1;481:31;535:4;532:1;525:15;563:4;560:1;553:15;438:140;-1:-1:-1;605:1:176;594:13;;381:232::o","linkReferences":{}},"methodIdentifiers":{"increment()":"d09de08a","number()":"8381f58a","setNumber(uint256)":"3fb5c1cb"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"number\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNumber\",\"type\":\"uint256\"}],\"name\":\"setNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"increment()\":{\"details\":\"The number is not in an unchecked block, so overflows will revert.\"},\"setNumber(uint256)\":{\"params\":{\"newNumber\":\"The new number for the counter.\"}}},\"title\":\"A public counter for anyone to use.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"increment()\":{\"notice\":\"Increase the counter's value by one.\"},\"setNumber(uint256)\":{\"notice\":\"Set the counter's number to a new value.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/Counter.sol\":\"Counter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eth-infinitism/account-abstraction/=lib/account-abstraction/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"test/mocks/Counter.sol\":{\"keccak256\":\"0x0fa1b74fe0cf9d5d2c1722ab9a90493abe331d23d00038e71fd82b546cc91bf1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://28e75b3eff57441d095ca3d5ce9b1ec8332a22466870e8c8e08dfda33439ec86\",\"dweb:/ipfs/QmP45iemTsqHwFpzcrLEJEsJdE7gksegGWwSkqSu7MRbJS\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"increment"},{"inputs":[],"stateMutability":"view","type":"function","name":"number","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setNumber"}],"devdoc":{"kind":"dev","methods":{"increment()":{"details":"The number is not in an unchecked block, so overflows will revert."},"setNumber(uint256)":{"params":{"newNumber":"The new number for the counter."}}},"version":1},"userdoc":{"kind":"user","methods":{"increment()":{"notice":"Increase the counter's value by one."},"setNumber(uint256)":{"notice":"Set the counter's number to a new value."}},"version":1}},"settings":{"remappings":["@eth-infinitism/account-abstraction/=lib/account-abstraction/contracts/","@openzeppelin/=lib/openzeppelin-contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","solady/=lib/solady/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"test/mocks/Counter.sol":"Counter"},"evmVersion":"paris","libraries":{}},"sources":{"test/mocks/Counter.sol":{"keccak256":"0x0fa1b74fe0cf9d5d2c1722ab9a90493abe331d23d00038e71fd82b546cc91bf1","urls":["bzz-raw://28e75b3eff57441d095ca3d5ce9b1ec8332a22466870e8c8e08dfda33439ec86","dweb:/ipfs/QmP45iemTsqHwFpzcrLEJEsJdE7gksegGWwSkqSu7MRbJS"],"license":"GPL-3.0"}},"version":1},"id":150}